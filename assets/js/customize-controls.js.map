{"version":3,"file":"customize-controls.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,CAAE,UAAWA,GAAG,EAAG;EAElB;EACAA,GAAG,CAACC,OAAO,CAACC,IAAI,CACf,KAAK,EACHD,OAAO,IAAM;IACd,IAAKA,OAAO,CAACE,QAAQ,CAAEH,GAAG,CAACI,KAAK,CAACC,eAAe,CAAE,EAAG;MACpDJ,OAAO,CAACK,QAAQ,CAACC,QAAQ,CAACC,IAAI,CAC7B,MAAM;QACLC,aAAa,CAAER,OAAO,CAAE;MACzB,CAAC,CACD;IACF;EACD,CAAC,CACD;;EAED;AACD;AACA;AACA;AACA;EACC,SAASQ,aAAa,CAAER,OAAO,EAAG;IACjCA,OAAO,CAACS,YAAY,GAAIT,OAAO,CAACU,SAAS,CAACC,IAAI,CAAE,6BAA6B,CAAE;IAC/EX,OAAO,CAACY,YAAY,GAAIZ,OAAO,CAACU,SAAS,CAACC,IAAI,CAAE,+BAA+B,CAAE;IACjFX,OAAO,CAACa,aAAa,GAAGb,OAAO,CAACU,SAAS,CAACC,IAAI,CAAE,iBAAiB,CAAE;;IAEnE;IACAG,mBAAmB,CAAEd,OAAO,CAAE;;IAE9B;IACAA,OAAO,CAACe,OAAO,CAACd,IAAI,CACnB,MAAM;MACLa,mBAAmB,CAAEd,OAAO,CAAE;IAC/B,CAAC,CACD;;IAED;IACAA,OAAO,CAACS,YAAY,CAACE,IAAI,CAAE,OAAO,CAAE,CAACK,EAAE,CACtC,OAAO,EACP,YAAY;MACXC,cAAc,CAAEjB,OAAO,CAACe,OAAO,EAAE,IAAI,CAACG,KAAK,CAAE;IAC9C,CAAC,CACD;IACDlB,OAAO,CAACY,YAAY,CAACD,IAAI,CAAE,OAAO,CAAE,CAACK,EAAE,CACtC,OAAO,EACP,YAAY;MACXG,eAAe,CAAEnB,OAAO,CAACe,OAAO,EAAE,IAAI,CAACG,KAAK,CAAE;IAC/C,CAAC,CACD;IACDlB,OAAO,CAACa,aAAa,CAACF,IAAI,CAAE,OAAO,CAAE,CAACK,EAAE,CACvC,OAAO,EACP,YAAY;MACX,MAAMI,YAAY,GAAG,EAAE;MACvBpB,OAAO,CAACa,aAAa,CAACF,IAAI,CAAE,UAAU,CAAE,CAACU,IAAI,CAC5C,YAAY;QACXD,YAAY,CAACE,IAAI,CAAE,IAAI,CAACJ,KAAK,CAAE;MAChC,CAAC,CACD;MACDC,eAAe,CAAEnB,OAAO,CAACe,OAAO,EAAEK,YAAY,CAACG,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGH,YAAY,CAAE;IACpF,CAAC,CACD;EACF;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC,SAASH,cAAc,CAAEF,OAAO,EAAES,IAAI,EAAG;IAExCT,OAAO,CAACU,GAAG,CACVC,MAAM,CAACC,MAAM,CACZ,CAAC,CAAC,EACFC,CAAC,CAACC,KAAK,CAAEd,OAAO,EAAE,CAAE,EACpB;MAAEe,YAAY,EAAEN;IAAK,CAAC,CACtB,CACD;EAEF;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC,SAASL,eAAe,CAAEJ,OAAO,EAAEgB,KAAK,EAAG;IAE1C;IACAhB,OAAO,CAACU,GAAG,CACVC,MAAM,CAACC,MAAM,CACZ,CAAC,CAAC,EACFC,CAAC,CAACC,KAAK,CAAEd,OAAO,EAAE,CAAE,EACpB;MAAEgB;IAAM,CAAC,CACT,CACD;EAEF;;EAEA;AACD;AACA;AACA;AACA;EACC,SAASjB,mBAAmB,CAAEd,OAAO,EAAG;IACvC,MAAM+B,KAAK,GAAG/B,OAAO,CAACe,OAAO,EAAE,CAACgB,KAAK,IAAI,EAAE;IAE3C,MAAMC,SAAS,GAAM,MAAM,KAAKhC,OAAO,CAACe,OAAO,EAAE,CAACe,YAAY,GAAG,MAAM,GAAG,MAAM;IAChF,MAAMG,UAAU,GAAKL,CAAC,CAACM,OAAO,CAAEH,KAAK,CAAE,GAAG,IAAI,GAAGA,KAAK;IACtD,MAAMX,YAAY,GAAGQ,CAAC,CAACM,OAAO,CAAEH,KAAK,CAAE,GAAGA,KAAK,GAAG,EAAE;IAEpD/B,OAAO,CAACa,aAAa,CAACsB,MAAM,CAAE,IAAI,KAAKF,UAAU,CAAE;IAEnD,MAAMG,SAAS,GAAGpC,OAAO,CAACS,YAAY,CAACE,IAAI,CAAG,gCAAgCqB,SAAW,IAAG,CAAE;IAC9F,MAAMK,SAAS,GAAGrC,OAAO,CAACY,YAAY,CAACD,IAAI,CAAG,gCAAgCsB,UAAY,IAAG,CAAE;IAE/FG,SAAS,CAACE,IAAI,CAAE,SAAS,EAAE,IAAI,CAAE;IACjCD,SAAS,CAACC,IAAI,CAAE,SAAS,EAAE,IAAI,CAAE;IAEjCtC,OAAO,CAACa,aAAa,CAACF,IAAI,CAAE,sBAAsB,CAAE,CAACU,IAAI,CACxD,YAAY;MACX,IAAI,CAACkB,OAAO,GAAGnB,YAAY,CAACoB,QAAQ,CAAE,IAAI,CAACtB,KAAK,CAAE;IACnD,CAAC,CACD;EACF;AACD,CAAC,EAAGuB,EAAE,CAACC,SAAS,CAAE,C","sources":["webpack://nav-menu-roles/./src/customize-controls.js"],"sourcesContent":["/**\n * Customizer scripts.\n *\n * @package Nav Menu Roles\n */\n\n( function ( api ) {\n\n\t// Augment each menu item control once it is added and embedded.\n\tapi.control.bind(\n\t\t'add',\n\t\t( control ) => {\n\t\t\tif ( control.extended( api.Menus.MenuItemControl ) ) {\n\t\t\t\tcontrol.deferred.embedded.done(\n\t\t\t\t\t() => {\n\t\t\t\t\t\textendControl( control );\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t);\n\n\t/**\n\t * Extend the control with roles information.\n\t *\n\t * @param {wp.customize.Menus.MenuItemControl} control\n\t */\n\tfunction extendControl( control ) {\n\t\tcontrol.modeFieldset  = control.container.find( '.nav_menu_role_display_mode' );\n\t\tcontrol.authFieldset  = control.container.find( '.nav_menu_role_authentication' );\n\t\tcontrol.rolesFieldset = control.container.find( '.nav_menu_roles' );\n\n\t\t// Set the initial UI state.\n\t\tupdateControlFields( control );\n\n\t\t// Update the UI state when the setting changes programmatically.\n\t\tcontrol.setting.bind(\n\t\t\t() => {\n\t\t\t\tupdateControlFields( control );\n\t\t\t}\n\t\t);\n\n\t\t// Update the setting when the inputs are modified.\n\t\tcontrol.modeFieldset.find( 'input' ).on(\n\t\t\t'click',\n\t\t\tfunction () {\n\t\t\t\tsetSettingMode( control.setting, this.value );\n\t\t\t}\n\t\t);\n\t\tcontrol.authFieldset.find( 'input' ).on(\n\t\t\t'click',\n\t\t\tfunction () {\n\t\t\t\tsetSettingRoles( control.setting, this.value );\n\t\t\t}\n\t\t);\n\t\tcontrol.rolesFieldset.find( 'input' ).on(\n\t\t\t'click',\n\t\t\tfunction () {\n\t\t\t\tconst checkedRoles = [];\n\t\t\t\tcontrol.rolesFieldset.find( ':checked' ).each(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tcheckedRoles.push( this.value );\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetSettingRoles( control.setting, checkedRoles.length === 0 ? 'in' : checkedRoles );\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Extend the setting with display  mode information.\n\t *\n\t * @param {wp.customize.Setting} setting\n\t * @param {string} mode\n\t */\n\tfunction setSettingMode( setting, mode ) {\n\n\t\tsetting.set(\n\t\t\tObject.assign(\n\t\t\t\t{},\n\t\t\t\t_.clone( setting() ),\n\t\t\t\t{ display_mode: mode }\n\t\t\t)\n\t\t);\n\n\t}\n\n\t/**\n\t * Extend the setting with roles information.\n\t *\n\t * @param {wp.customize.Setting} setting\n\t * @param {string|Array} roles\n\t */\n\tfunction setSettingRoles( setting, roles ) {\n\n\t\t// NB: { roles } converts the roles variable to object with roles key, { roles: value }\n\t\tsetting.set(\n\t\t\tObject.assign(\n\t\t\t\t{},\n\t\t\t\t_.clone( setting() ),\n\t\t\t\t{ roles }\n\t\t\t)\n\t\t);\n\n\t}\n\n\t/**\n\t * Apply the control's setting value to the control's fields.\n\t *\n\t * @param {wp.customize.Menus.MenuItemControl} control\n\t */\n\tfunction updateControlFields( control ) {\n\t\tconst roles = control.setting().roles || '';\n\n\t\tconst modeValue    = 'hide' === control.setting().display_mode ? 'hide' : 'show';\n\t\tconst radioValue   = _.isArray( roles ) ? 'in' : roles;\n\t\tconst checkedRoles = _.isArray( roles ) ? roles : [];\n\n\t\tcontrol.rolesFieldset.toggle( 'in' === radioValue );\n\n\t\tconst modeRadio = control.modeFieldset.find( `input[type = radio][value = \"${ modeValue }\"]` );\n\t\tconst authRadio = control.authFieldset.find( `input[type = radio][value = \"${ radioValue }\"]` );\n\n\t\tmodeRadio.prop( 'checked', true );\n\t\tauthRadio.prop( 'checked', true );\n\n\t\tcontrol.rolesFieldset.find( 'input[type=checkbox]' ).each(\n\t\t\tfunction () {\n\t\t\t\tthis.checked = checkedRoles.includes( this.value );\n\t\t\t}\n\t\t);\n\t}\n})( wp.customize );\n"],"names":["api","control","bind","extended","Menus","MenuItemControl","deferred","embedded","done","extendControl","modeFieldset","container","find","authFieldset","rolesFieldset","updateControlFields","setting","on","setSettingMode","value","setSettingRoles","checkedRoles","each","push","length","mode","set","Object","assign","_","clone","display_mode","roles","modeValue","radioValue","isArray","toggle","modeRadio","authRadio","prop","checked","includes","wp","customize"],"sourceRoot":""}